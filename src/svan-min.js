/* by a-sansara - v 0.4 - https://github.com/pluie-org/svan */!function(){var is=function(o,intent){return typeof o==intent},Svan=function(selector,context){return new Svan.init(selector,context)},isNone=Svan.isNone=function(o){return is(o,"undefined")},isStr=Svan.isStr=function(o){return is(o,"string")},isFunc=Svan.isFunc=function(o){return is(o,"function")},isObj=Svan.isObj=function(o){return is(o,"object")},isNode=Svan.isNode=function(o){return isObj(o)&&!isNone(o.nodeType)},isWin=Svan.isWin=function(o){return isObj(o)&&!isNone(o.window)&&o.window==o};Svan.prototype={regsan:function(v){return v.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")},first:function(){return this.found?this.list[0]:null},last:function(){return this.found?this.list[this.list.length-1]:b},index:function(i){return this.found&&i>0&&i<this.list.length?this.list[i]:b},all:function(){return this.list},find:function(s){return this.found?new Svan.init(s,this.list[0]):new Svan.init("")},each:function(f){this.found&&this.list.forEach(f)},html:function(data){return data?void this.each(function(node){node.innerHTML=data}):this.found?this.list[0].innerHTML:""},append:function(data){this.each(function(node){node.innerHTML+=data})},prepend:function(data){if(this.found)if(isStr(data)){var div=document.createElement("div");for(div.innerHTML=data;null!=div.lastChild;)this.first().insertBefore(div.lastChild,this.first().firstChild)}else{var div=isStr(data)?document.createElement("div"):data;this.first().insertBefore(data,this.first().firstChild)}},on:function(type,fn,capture){this.each(function(node){node.addEventListener(type,fn,capture===!0)})},val:function(data){return data?void this.each(function(node){node.value=data}):this.found?this.list[0].value:null},attr:function(key,value){return 1==arguments.length?this.found?this.list[0].getAttribute(key):null:void this.each(function(node){node.setAttribute(key,value)})},toggle:function(cssName){this.each(function(node){node.classList.toggle(cssName)})},hasClass:function(cssName){return this.found?this.list[0].classList.contains(cssName):this.found},removeClass:function(cssName){this.each(function(node){node.classList.contains(cssName)&&node.classList.toggle(cssName)})},addClass:function(cssName){this.each(function(node){node.classList.contains(cssName)||node.classList.toggle(cssName)})},fadeIn:function(duration,fn,display){if(this.found){duration||(duration=this.FADE_DURATION);var inc=parseFloat(1/duration*20),n=this.first();n.style.opacity=0,n.style.display=display||"block",function fade(){var val=parseFloat(n.style.opacity);(val+=inc)<1?(n.style.opacity=val,requestAnimationFrame(fade)):"function"==typeof fn&&fn.call(n)}(duration)}},fadeOut:function(duration,fn){if(this.found){duration||(duration=this.FADE_DURATION);var inc=parseFloat(1/duration*20),n=this.first();n.style.opacity=1,function fade(){var val=parseFloat(n.style.opacity);(val-=inc)<0?(n.style.display="none","function"==typeof fn&&fn.call(n)):(n.style.opacity=val,requestAnimationFrame(fade))}(duration)}},ready:function(fn){this.context.addEventListener("DOMContentLoaded",fn)}},Svan.eachObj=function(obj,fn,context){for(var prop in obj)obj.hasOwnProperty(prop)&&fn.call(context,prop,obj[prop])},Svan.ajax=function(def){this.eachObj(def,function(k,v){console.log(k),console.log(v)});var xhr=new XMLHttpRequest;xhr.onreadystatechange=function(){4==this.readyState&&(200==this.status?isFunc(def.done)&&def.done.call(def.context,this.responseText,this.status):isFunc(def.fail)&&def.fail.call(def.context,this.responseText,this.status),isFunc(def.always)&&def.always.call(def.context,this.responseText,this.status))},!isNone(def.timeout)&&def.async&&(xhr.timeout=def.timeout),isFunc(def.before)&&def.before.call(xhr),xhr.open(def.method,def.url,def.async),xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");var qs="";isObj(def.data)&&this.eachObj(def.data,function(k,v){qs+=k+"="+encodeURIComponent(v)}),xhr.send(qs)};var init=Svan.init=function(selector,context){return this.FADE_DURATION=700,this.VERSION=.4,this.context=isNone(context)?document:context,this.list=isStr(selector)?[].slice.call(this.context.querySelectorAll(selector)):isNode(selector)||isWin(selector)?[selector]:[],this.found=this.list.length>0,this};init.prototype=Svan.prototype,window.Svan=Svan,isNone(window.$)&&(window.$=Svan)}();
